//   CARLOS VARGAS
//   2023-05-23

// NOT USING WebWorker
// DOESN'T UPDATE WHEN OUT OF THE TAB :(


let speed = 1000; //controls speed of countdown in milliseconds


// REBUILDING THE UI (for when the timer ends and you want to start again)
// note, #ui-location also acts as a div for the end message
function replaceUI() {
  const location = document.getElementById("ui-location");
  const uiTempl = document.getElementById("ui-template");

  location.innerHTML = uiTempl.innerHTML;
}


// EXAM TIMER
let countdown;
function startTimer() {
  const timeLimitInput = document.getElementById("timeLimit");

  const timeLimit = parseInt(timeLimitInput.value) * 60; // Convert minutes to seconds

  let currentTime = timeLimit;
  const timerElement = document.getElementById("timer");
  const finishMessage = document.getElementById("end-message-template");
  const finishElement = document.getElementById("ui-location");

  // Update the timer display and decrease the currentTime
  countdown = setInterval(() => {
    const minutes = Math.floor(currentTime / 60);
    const seconds = Math.floor(currentTime % 60);

    timerElement.innerHTML = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

    currentTime--;

    if (currentTime < 0) {
      clearInterval(countdown);
      finishElement.innerHTML = finishMessage.innerHTML;

      const audio = new Audio("/notifMain.mp3");
      audio.play();
    }
  }, speed);

}


// INDIVIDUAL QUESTION TIMER 
let countdownQuestions;
let currentQuestion;
function startQuestionsTimer() {
  currentQuestion++;

  const timeLimitInput = document.getElementById("timeLimit");
  const numQuestionsInput = document.getElementById("numQuestions");

  const timeLimit = parseInt(timeLimitInput.value) * 60; // Convert minutes to seconds
  const numQuestions = parseInt(numQuestionsInput.value);

  let currentTime = timeLimit / numQuestions;
  const questionElement = document.getElementById("currentQuestion");
  const timerElement = document.getElementById("questTime");

  // update the timer display
  countdownQuestions = setInterval(() => {
    const minutes = Math.floor(currentTime / 60);
    const seconds = Math.floor(currentTime % 60);

    timerElement.innerHTML = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
    questionElement.innerHTML = `Question ${currentQuestion}`; // Q#
    currentTime--;
    const audio = new Audio("/notifQues.mp3");

    if (currentTime < 0 && currentQuestion < numQuestions) {
      audio.play();
      clearInterval(countdownQuestions);
      startQuestionsTimer();
    }
    // keeps question timer from overrunning
    else if (currentTime < 0 && currentQuestion >= numQuestions) {
      clearInterval(countdownQuestions);
    }
  }, speed)
}


// START TO IT ALL
function updateTimer() {
  replaceUI();
  clearInterval(countdown);
  clearInterval(countdownQuestions);
  currentQuestion = 0; // restarts the current question everytime button is pressed
  startTimer();
  startQuestionsTimer();
}
